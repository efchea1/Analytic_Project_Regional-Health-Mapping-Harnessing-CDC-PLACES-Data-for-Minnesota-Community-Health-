[{"name":"app.R","content":"# Load Packages ---------------------------------------------------------------\r\nlibrary(shiny)            # shiny package for building interactive web applications\r\nlibrary(readr)            # readr package for reading data files\r\nlibrary(ggplot2)          # ggplot2 package for creating graphics\r\nlibrary(dplyr)            # dplyr package for data manipulation\r\nlibrary(shinydashboard)   # shinydashboard package for creating dashboards\r\nlibrary(shinyjs)          # shinyjs package for adding JavaScript functionality\r\nlibrary(plotly)           # plotly package for creating interactive plots\r\n\r\n# Load Data -------------------------------------------------------------------\r\n# Load Minnesota CDC Places Census Estimate data for 2020 to 2022 from a CSV file available online\r\nCensusEstMN <- read.csv(\r\n  'https://raw.githubusercontent.com/quincountychsmn/Public-Data-Sources/main/CDC%20Places/2020%20to%202022%20Pop.%20Estimates/cc-est2022-agesex.csv'\r\n)\r\n\r\n# List of URLs for CHD data files from 2018 to 2021\r\nCHD_files <- list(\r\n  'https://raw.githubusercontent.com/quincountychsmn/Public-Data-Sources/main/CDC%20Places/Places%20CDC%20Estimates/CHD/CHD2018.csv',\r\n  'https://raw.githubusercontent.com/quincountychsmn/Public-Data-Sources/main/CDC%20Places/Places%20CDC%20Estimates/CHD/CHD2019.csv',\r\n  'https://raw.githubusercontent.com/quincountychsmn/Public-Data-Sources/main/CDC%20Places/Places%20CDC%20Estimates/CHD/CHD2020.csv',\r\n  'https://raw.githubusercontent.com/quincountychsmn/Public-Data-Sources/main/CDC%20Places/Places%20CDC%20Estimates/CHD/CHD2021.csv'\r\n)\r\n\r\n# Read each CHD data file into a list of data frames\r\nCHD_data <- lapply(CHD_files, read.csv)\r\n\r\n# Load Community Health Board (CHB) data from a CSV file\r\nchb_raw <- read.csv(\r\n  'https://raw.githubusercontent.com/quincountychsmn/Public-Data-Sources/main/MN%20SCHSAC%20%26%20CHB%20Regions/Community%20Health%20Board%20as%20of%201_17_2024.csv'\r\n)\r\n\r\n# Load Minnesota region data from a CSV file\r\nmn_region_raw <- read.csv(\r\n  'https://raw.githubusercontent.com/quincountychsmn/Public-Data-Sources/main/MN%20SCHSAC%20%26%20CHB%20Regions/State%20Community%20Health%20Services%20Advisory%20Committee%20as%20of%201_17_2024.csv'\r\n)\r\n\r\n# Data Wrangling --------------------------------------------------------------\r\n# Clean and merge CHD data\r\nCHD_data <- lapply(CHD_data, function(df) {\r\n  df$LocationID <- ifelse(\"Latitude\" %in% colnames(df), as.character(df$Latitude), NA) # Add LocationID if Latitude column exists\r\n  colnames(df)[colnames(df) == 'Geolocatioin'] <- 'Geolocation' # Correct spelling of Geolocation column if needed\r\n  df\r\n})\r\n\r\n# Combine all cleaned CHD data frames into one data frame\r\nCHD_Final <- bind_rows(CHD_data)\r\n\r\n# Filter and select specific locations and data for the year 2021 in MN\r\nSelected_Locations <- CHD_Final |> \r\n  filter(LocationName %in% c(\"Aitkin\", \"Anoka\", \"Becker\", \"Beltrami\", \"Benton\", \"Big Stone\", \"Blue Earth\", \"Brown\", \"Carlton\", \"Carver\",\r\n                             \"Cass\", \"Chippewa\", \"Chisago\", \"Clay\", \"Clearwater\", \"Cook\", \"Cottonwood\", \"Crow Wing\", \"Dakota\", \"Dodge\", \"Douglas\",\r\n                             \"Faribault\", \"Fillmore\", \"Freeborn\", \"Goodhue\", \"Grant\", \"Hennepin\", \"Houston\", \"Hubbard\", \"Isanti\", \"Itasca\",\r\n                             \"Jackson\", \"Kanabec\", \"Kandiyohi\", \"Kittson\", \"Koochiching\", \"Lac qui Parle\", \"Lake\", \"Lake of the Woods\", \"Le Sueur\",\r\n                             \"Lincoln\", \"Lyon\", \"Mahnomen\", \"Marshall\", \"Martin\", \"McLeod\", \"Meeker\", \"Mille Lacs\", \"Morrison\", \"Mower\", \"Murray\",\r\n                             \"Nicollet\", \"Nobles\", \"Norman\", \"Olmsted\", \"Otter Tail\", \"Pennington\", \"Pine\", \"Pipestone\", \"Polk\", \"Pope\", \"Ramsey\",\r\n                             \"Red Lake\", \"Redwood\", \"Renville\", \"Rice\", \"Rock\", \"Roseau\", \"Scott\", \"Sherburne\", \"Sibley\", \"St. Louis\", \"Stearns\",\r\n                             \"Steele\", \"Stevens\", \"Swift\", \"Todd\", \"Traverse\", \"Wabasha\", \"Wadena\", \"Waseca\", \"Washington\", \"Watonwan\",\r\n                             \"Wilkin\", \"Winona\", \"Wright\", \"Yellow Medicine\"),\r\n         Year == 2021, StateAbbr == \"MN\")\r\n\r\n# Remove \" County\" from county names in census data\r\nCensusEstMN$CTYNAME <- gsub(\" County\", \"\", CensusEstMN$CTYNAME)\r\n\r\n# Population estimates for CHD in MN\r\nPopEst_CHDMN <- CensusEstMN |> \r\n  filter(YEAR == 3) |> # Filter data for the year 2022 (YEAR == 3)\r\n  inner_join(Selected_Locations, by = c(\"CTYNAME\" = \"LocationName\")) |> # Join census data with selected CHD locations\r\n  select(CTYNAME, Data_Value_Type, AGE18PLUS_TOT, Measure, Data_Value, High_Confidence_Limit, Low_Confidence_Limit) # Select relevant columns\r\n\r\n# Function to calculate aggregate values\r\ncalc_aggregate_values <- function(df) {\r\n  df |> \r\n    mutate(Aggregate_Data_Value = Data_Value * AGE18PLUS_TOT / 100, # Calculate aggregate data value\r\n           Aggregate_Low_Confidence_Limit = Low_Confidence_Limit * AGE18PLUS_TOT / 100, # Calculate aggregate low confidence limit\r\n           Aggregate_High_Confidence_Limit = High_Confidence_Limit * AGE18PLUS_TOT / 100) |> # Calculate aggregate high confidence limit\r\n    select(CTYNAME, Data_Value_Type, AGE18PLUS_TOT, Aggregate_High_Confidence_Limit,\r\n           Aggregate_Data_Value, Aggregate_Low_Confidence_Limit) # Select is used to Select relevant columns \r\n}\r\n\r\n# Calculate crude values\r\nCHD_Crude21MN <- calc_aggregate_values(PopEst_CHDMN |> filter(Data_Value_Type == 'Crude prevalence'))\r\n# Calculate age-adjusted values\r\nCHD_Adj21MN <- calc_aggregate_values(PopEst_CHDMN |> filter(Data_Value_Type == 'Age-adjusted prevalence'))\r\n# Combine crude and age-adjusted values\r\nCHD_MN21 <- bind_rows(CHD_Adj21MN, CHD_Crude21MN)\r\n\r\n# App user interface ------------------------------------------\r\n# Define UI -------------------------------------------------------------------\r\nui <- dashboardPage(\r\n  dashboardHeader(\r\n    title = \"CDC Places to MN Regions\",\r\n    titleWidth = 400\r\n  ), # Dashboard header with title\r\n  dashboardSidebar(\r\n    width = 350,\r\n    selectInput(\r\n      \"parGlobal_county\",\r\n      label = \"Select County of Interest\",\r\n      choices = sort(unique(mn_region_raw$County)),\r\n      selected = \"Kittson\",\r\n      width = 350\r\n    ), # Sidebar with county selection input\r\n    selectInput(\r\n      \"parLocal_chdYear\",\r\n      label = \"Select Year\",\r\n      choices = sort(unique(Selected_Locations$Year), decreasing = TRUE),\r\n      selected = max(unique(Selected_Locations$Year)),\r\n      width = 350\r\n    ), # Year selection input for CHD data\r\n    selectInput(\r\n      \"par_leadStateRegionChb\",\r\n      label = \"Select Comparison\",\r\n      choices = c(\"All\", \"State\", \"Region\", \"Community Health Board\"),\r\n      selected = \"All\",\r\n      multiple = FALSE,\r\n      width = 350\r\n    ), # Comparison selection input for CHD data\r\n    sidebarMenu(\r\n      menuItem(\"Home\", tabName = \"tn_homePage\"),\r\n      menuItem(\"Region & CHB Definition\", tabName = \"tn_regionChbDefinitions\"),\r\n      menuItem(\"Coronary Heart Disease\", tabName = \"tn_coronaryHeartDisease\")\r\n    ) # Sidebar menu with navigation items\r\n  ),\r\n  dashboardBody(\r\n    shinyjs::useShinyjs(), # Enable shinyjs for JavaScript functionality\r\n    tabItems(\r\n      tabItem(\r\n        tabName = \"tn_homePage\",\r\n        tabsetPanel(\r\n          tabPanel(\r\n            \"Home Page\",\r\n            fluidRow(\r\n              column(\r\n                width = 12,\r\n                h1(\"Welcome to the CDC PLACES MN Region Dashboard\"),\r\n                h4(\"This Shiny application replicates the work represented \",\r\n                   tags$a(href=\"https://data.web.health.state.mn.us/web/mndata/\", \"here!\", target= \"_blank\")),\r\n                tags$h4(\"Before the CDC Places project, the CDC Behavioral Risk Factor Surveillance System BRFSS, allowed for state\r\n                projected healthcare indicators. This process was not able to be applied to the county level. Now, with\r\n                CDC Places counties can view some projected healthcare indicators. However, currently the CDC Places project\r\n                does not show in an easy format aggregate county regions. By doing this project, I am not only going to help\r\n                Quin County CHS, but other county regions in the state of MN or even the US.\"),\r\n                tags$h3(\"Those involved with this project are:\"),\r\n                tags$h4(tags$b(\"Emmanuel Fle Chea\"), \", MPH, Public Health Data Science, University of Minnesota School of Public Health\"), # tags$b() bold the texts in the parentheses\r\n                tags$h4(tags$b(\"Mr. Patrick Olson\"), \" (Preceptor), Quin County Community Health Board, Community Resource Liaison/Associate/Researcher\") # tags$b() bold the texts in the parentheses\r\n              ) # Home page content with welcome message and project details\r\n            )\r\n          )\r\n        )\r\n      ),\r\n      tabItem(\r\n        tabName = \"tn_regionChbDefinitions\",\r\n        fluidRow(\r\n          column(\r\n            width = 12,\r\n            tabsetPanel(\r\n              tabPanel(\r\n                \"Region/CHB\",\r\n                fluidRow(\r\n                  column(\r\n                    width = 12,\r\n                    # Narrative section explaining the purpose of the dashboard\r\n                    h3(HTML(\"Updating the Select County of Interest filter will highlight the county in <font color=red>red<\/font> while the Regions and Community Health Boards will remain in <b>bold<\/b>.\")),\r\n                    h3(\"For this tab, the Select SCHSAC Region and Select Community Health Board filters are greyed out because they do not execute any function on this tab.\"),\r\n                    h3(\"The purpose for this tab is to provide a quick reference for what counties fall under which region and Community Health Board.\"),\r\n                    tags$hr(style = \"border-top: 1px solid #ccc; margin-top: 20px; margin-bottom: 20px;\")\r\n                  )\r\n                ),\r\n                fluidRow(\r\n                  column(6, uiOutput(\"region_narrative\", style = \"font-size: 20px;\")), # Region narrative output\r\n                  column(6, uiOutput(\"chb_narrative_01\", style = \"font-size: 20px;\")) # CHB narrative output\r\n                ),\r\n                fluidRow(\r\n                  column(\r\n                    width = 12,\r\n                    h3(\"Regions and Counties\"),\r\n                    uiOutput(\"region_counties\") # UI output for regions and counties list\r\n                  ),\r\n                  column(\r\n                    width = 12,\r\n                    h3(\"Community Health Boards\"),\r\n                    uiOutput(\"chb_counties\") # UI output for CHB and counties list\r\n                  )\r\n                )\r\n              )\r\n            )\r\n          )\r\n        )\r\n      ),\r\n      tabItem(\r\n        tabName = \"tn_coronaryHeartDisease\",\r\n        tabsetPanel(\r\n          id = \"tpId_coronaryHeartDisease\",\r\n          tabPanel(\r\n            \"Adults>=18 CHD Exposure\",\r\n            fluidRow(\r\n              column(\r\n                width = 12,\r\n                fluidRow(\r\n                  column(\r\n                    width = 10,\r\n                    box(\r\n                      title = \"Coronary Heart Disease Exposure Estimate\",\r\n                      status = \"primary\",\r\n                      solidHeader = TRUE,\r\n                      collapsible = TRUE,\r\n                      plotOutput(\"plot_chdEstimate\") # Plot output for CHD exposure estimate\r\n                    ),\r\n                    box(\r\n                      title = \"Confidence Interval for Coronary Heart Disease Estimate\",\r\n                      status = \"primary\",\r\n                      solidHeader = TRUE,\r\n                      collapsible = TRUE,\r\n                      plotOutput(\"plot_confidenceInterval\") # Plot output for CHD confidence interval\r\n                    )\r\n                  )\r\n                )\r\n              )\r\n            )\r\n          )\r\n        )\r\n      )\r\n    )\r\n  )\r\n)\r\n\r\n# Server Logic ----------------------------------------------------------------\r\nserver <- function(input, output, session) {\r\n  observe({\r\n    updateSelectInput(\r\n      session,\r\n      \"parGlobal_region\",\r\n      choices = unique(mn_region_raw$RegionName)\r\n    ) # Update region input choices based on unique region names in the data\r\n  })\r\n  \r\n  observe({\r\n    updateSelectInput(\r\n      session,\r\n      \"parGlobal_chb\",\r\n      choices = unique(chb_raw$CHBName)\r\n    ) # Update CHB input choices based on unique CHB names in the data\r\n  })\r\n  \r\n  output$region_narrative <- renderUI({\r\n    filtered_region <- mn_region_raw |>\r\n      filter(County == input$parGlobal_county)\r\n    HTML(\r\n      paste0(\r\n        \"<b>\", unique(filtered_region$RegionName), \" Region<\/b> is made up of the following counties: \",\r\n        paste(unique(filtered_region$County), collapse = \", \"), \".\"\r\n      ) # Create HTML content for displaying the region narrative\r\n    )\r\n  })\r\n  \r\n  output$chb_narrative_01 <- renderUI({\r\n    filtered_chb <- chb_raw |>\r\n      filter(County == input$parGlobal_county) # Filter CHB data for the selected county\r\n    HTML(\r\n      paste0(\r\n        \"<b>\", unique(filtered_chb$CHBName), \" Community Health Board<\/b> includes: \",\r\n        paste(unique(filtered_chb$County), collapse = \", \"), \".\"\r\n      ) # Create HTML content for displaying the CHB narrative\r\n    )\r\n  })\r\n  \r\n  # Helper function to highlight selected county in text\r\n  highlight_county <- function(text, selected_county) {\r\n    gsub(selected_county, paste0(\"<font color='red'>\", selected_county, \"<\/font>\"), text) # Highlight the selected county in red\r\n  }\r\n  \r\n  output$region_counties <- renderUI({\r\n    selected_county <- input$parGlobal_county\r\n    regions <- mn_region_raw |>\r\n      group_by(Region) |>\r\n      summarise(Counties = paste(County, collapse = \", \")) # Group data by region and concatenate county names\r\n    \r\n    regions_text <- regions |>\r\n      mutate(Text = paste0(\"<b>\", Region, \" Region::<\/b> \", Counties)) |>\r\n      pull(Text) # Create HTML text with bold region names\r\n    \r\n    regions_text <- sapply(regions_text, highlight_county, selected_county = selected_county) # Highlight selected county in the regions text\r\n    HTML(paste(regions_text, collapse = \"<br>\")) # Render HTML for regions and counties\r\n  })\r\n  \r\n  output$chb_counties <- renderUI({\r\n    selected_county <- input$parGlobal_county\r\n    chbs <- chb_raw |>\r\n      group_by(CHB) |>\r\n      summarise(Counties = paste(County, collapse = \", \")) # Group data by CHB and concatenate county names\r\n    \r\n    chb_text <- chbs |>\r\n      mutate(Text = paste0(\"<b>\", CHB, \"::<\/b> \", Counties)) |>\r\n      pull(Text) # Create HTML text with bold CHB names\r\n    \r\n    chb_text <- sapply(chb_text, highlight_county, selected_county = selected_county) # Highlight selected county in the CHB text\r\n    HTML(paste(chb_text, collapse = \"<br>\")) # Render HTML for CHBs and counties\r\n  })\r\n  \r\n  # Reactive Data for plotting\r\n  reactive_CHD_data <- reactive({\r\n    CHD_MN21 |> filter(CTYNAME == input$parGlobal_county) # Filter CHD data for the selected county\r\n  })\r\n  \r\n  output$plot_chdEstimate <- renderPlot({\r\n    data <- reactive_CHD_data() # Get the filtered CHD data\r\n    ggplot(data, aes(x = CTYNAME, y = Aggregate_Data_Value, fill = Data_Value_Type)) +\r\n      geom_bar(stat = \"identity\", position = \"dodge\") +\r\n      labs(title = \"Coronary Heart Disease Exposure Estimate\", x = \"County\", y = \"Estimate\") # Plot CHD exposure estimate\r\n  })\r\n  \r\n  output$plot_confidenceInterval <- renderPlot({\r\n    data <- reactive_CHD_data() # Get the filtered CHD data\r\n    ggplot(data, aes(x = CTYNAME, y = Aggregate_Data_Value, color = Data_Value_Type)) +\r\n      geom_errorbar(aes(ymin = Aggregate_Low_Confidence_Limit, ymax = Aggregate_High_Confidence_Limit), width = 0.2) +\r\n      labs(title = \"Confidence Interval for Coronary Heart Disease Estimate\", x = \"County\", y = \"Estimate\") # Plot CHD confidence interval\r\n  })\r\n}\r\n\r\n# Run the app -----------------------------------------------------------------\r\nshinyApp(ui = ui, server = server) # Run the Shiny application ","type":"text"}]
